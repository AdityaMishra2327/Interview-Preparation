### 1. Insert an element at the **beginning** of the array:

```python
def insert_at_beginning(arr, element):
    """
    Insert an element at the beginning of the list.
    
    Parameters:
    arr (list): The list where the element will be inserted.
    element (any): The element to be inserted at the beginning of the list.
    """
    arr.insert(0, element)
    print(f"Element {element} inserted at the beginning: {arr}")

# Example usage:
my_list = [1, 2, 3, 4]
insert_at_beginning(my_list, 10)
```

### 2. Insert an element at the **end** of the array:

```python
def insert_at_end(arr, element):
    """
    Insert an element at the end of the list.
    
    Parameters:
    arr (list): The list where the element will be inserted.
    element (any): The element to be appended to the end of the list.
    """
    arr.append(element)
    print(f"Element {element} appended at the end: {arr}")

# Example usage:
my_list = [1, 2, 3, 4]
insert_at_end(my_list, 20)
```

### 3. Insert an element at a **specific index** in the array:

```python
def insert_at_index(arr, element, index):
    """
    Insert an element at a specified index in the list.
    
    Parameters:
    arr (list): The list where the element will be inserted.
    element (any): The element to be inserted into the list.
    index (int): The index at which to insert the element.
    """
    if 0 <= index <= len(arr):
        arr.insert(index, element)
        print(f"Element {element} inserted at index {index}: {arr}")
    else:
        print(f"Invalid index! Index must be between 0 and {len(arr)}.")

# Example usage:
my_list = [1, 2, 3, 4]
insert_at_index(my_list, 15, 2)
```

### Explanation:
1. **Insert at the beginning**: The `insert()` method with index `0` places the element at the start of the list.
2. **Insert at the end**: The `append()` method adds the element to the end.
3. **Insert at a specific index**: The `insert()` method with a valid index adds the element at that specific position.
